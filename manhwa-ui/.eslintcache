[{"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\index.js":"1","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\App.js":"2","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js":"3","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js":"4","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js":"5","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js":"6","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js":"7","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js":"8","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js":"9","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js":"10","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js":"11","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js":"12","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js":"13","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js":"14","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js":"15","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js":"16","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js":"17","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js":"18","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js":"19","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js":"20","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js":"21","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js":"22","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js":"23","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js":"24","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js":"25","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js":"26","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js":"27","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\index.js":"28","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js":"29","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js":"30","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\App.js":"31","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js":"32","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js":"33","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js":"34","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js":"35","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js":"36","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js":"37","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js":"38","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js":"39","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js":"40","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js":"41","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js":"42","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js":"43","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js":"44","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js":"45","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js":"46","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js":"47","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js":"48","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js":"49","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js":"50","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js":"51","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js":"52","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js":"53","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js":"54","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\PersistLogin.js":"55","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useLogout.js":"56","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\User.js":"57","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Image.js":"58","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Description.js":"59","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingList.js":"60","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingListButton.js":"61"},{"size":619,"mtime":1659608800561,"results":"62","hashOfConfig":"63"},{"size":2625,"mtime":1659608800554,"results":"64","hashOfConfig":"63"},{"size":362,"mtime":1657325489987,"results":"65","hashOfConfig":"63"},{"size":3217,"mtime":1659608800561,"results":"66","hashOfConfig":"63"},{"size":577,"mtime":1659609939389,"results":"67","hashOfConfig":"63"},{"size":652,"mtime":1659608800557,"results":"68","hashOfConfig":"63"},{"size":1887,"mtime":1659608800556,"results":"69","hashOfConfig":"63"},{"size":892,"mtime":1659610021143,"results":"70","hashOfConfig":"63"},{"size":1446,"mtime":1659609814745,"results":"71","hashOfConfig":"63"},{"size":416,"mtime":1657416592353,"results":"72","hashOfConfig":"63"},{"size":1133,"mtime":1657416860205,"results":"73","hashOfConfig":"63"},{"size":866,"mtime":1657398936313,"results":"74","hashOfConfig":"63"},{"size":376,"mtime":1657406794520,"results":"75","hashOfConfig":"63"},{"size":1627,"mtime":1657480118124,"results":"76","hashOfConfig":"63"},{"size":770,"mtime":1657436758563,"results":"77","hashOfConfig":"63"},{"size":1332,"mtime":1657480144404,"results":"78","hashOfConfig":"63"},{"size":590,"mtime":1657483972340,"results":"79","hashOfConfig":"63"},{"size":2856,"mtime":1657602956887,"results":"80","hashOfConfig":"63"},{"size":5934,"mtime":1659610003739,"results":"81","hashOfConfig":"63"},{"size":196,"mtime":1659608800555,"results":"82","hashOfConfig":"63"},{"size":2999,"mtime":1659609988011,"results":"83","hashOfConfig":"63"},{"size":384,"mtime":1659608800559,"results":"84","hashOfConfig":"63"},{"size":305,"mtime":1659608800559,"results":"85","hashOfConfig":"63"},{"size":433,"mtime":1659608800558,"results":"86","hashOfConfig":"63"},{"size":1079,"mtime":1659609679147,"results":"87","hashOfConfig":"63"},{"size":595,"mtime":1659608800560,"results":"88","hashOfConfig":"63"},{"size":1634,"mtime":1659608800560,"results":"89","hashOfConfig":"63"},{"size":619,"mtime":1659657365273,"results":"90","hashOfConfig":"91"},{"size":384,"mtime":1659677152371,"results":"92","hashOfConfig":"91"},{"size":375,"mtime":1659657329826,"results":"93","hashOfConfig":"91"},{"size":2694,"mtime":1659859723136,"results":"94","hashOfConfig":"91"},{"size":681,"mtime":1659661889204,"results":"95","hashOfConfig":"91"},{"size":3170,"mtime":1659661071369,"results":"96","hashOfConfig":"91"},{"size":1337,"mtime":1659692281475,"results":"97","hashOfConfig":"91"},{"size":1181,"mtime":1659912759435,"results":"98","hashOfConfig":"91"},{"size":1626,"mtime":1659661071371,"results":"99","hashOfConfig":"91"},{"size":416,"mtime":1659657329824,"results":"100","hashOfConfig":"91"},{"size":2856,"mtime":1659657329824,"results":"101","hashOfConfig":"91"},{"size":7083,"mtime":1659864812856,"results":"102","hashOfConfig":"91"},{"size":1186,"mtime":1659859758708,"results":"103","hashOfConfig":"91"},{"size":3119,"mtime":1659694733543,"results":"104","hashOfConfig":"91"},{"size":1273,"mtime":1659694786700,"results":"105","hashOfConfig":"91"},{"size":452,"mtime":1659661945131,"results":"106","hashOfConfig":"91"},{"size":591,"mtime":1659664088508,"results":"107","hashOfConfig":"91"},{"size":1445,"mtime":1659702416266,"results":"108","hashOfConfig":"91"},{"size":865,"mtime":1659661071367,"results":"109","hashOfConfig":"91"},{"size":390,"mtime":1659664186187,"results":"110","hashOfConfig":"91"},{"size":1846,"mtime":1659912151424,"results":"111","hashOfConfig":"91"},{"size":1132,"mtime":1659661071366,"results":"112","hashOfConfig":"91"},{"size":769,"mtime":1659661071368,"results":"113","hashOfConfig":"91"},{"size":318,"mtime":1659693197342,"results":"114","hashOfConfig":"91"},{"size":1634,"mtime":1659657365273,"results":"115","hashOfConfig":"91"},{"size":611,"mtime":1659661071369,"results":"116","hashOfConfig":"91"},{"size":196,"mtime":1659657365270,"results":"117","hashOfConfig":"91"},{"size":916,"mtime":1659698999653,"results":"118","hashOfConfig":"91"},{"size":517,"mtime":1659665234438,"results":"119","hashOfConfig":"91"},{"size":1224,"mtime":1659860067818,"results":"120","hashOfConfig":"91"},{"size":849,"mtime":1659859104634,"results":"121","hashOfConfig":"91"},{"size":875,"mtime":1659911872805,"results":"122","hashOfConfig":"91"},{"size":1316,"mtime":1659860145420,"results":"123","hashOfConfig":"91"},{"size":3159,"mtime":1659913417766,"results":"124","hashOfConfig":"91"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yxb3gv",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"131"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"131"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"131"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"3ayxat",{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"185"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"185"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"185"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"185"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"185"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"185"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"185"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"185"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"185"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"185"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"185"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"185"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"185"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\index.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\App.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js",[],["265","266"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js",["267"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js",["268"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js",["269"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js",["270"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js",["271"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js",["272"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction FilterByGenres( { genre, setManhwaToShow, genreShown}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const history = useHistory(); \r\n\r\n    const loadManhwas = async () => {\r\n        const params = {\"genres\": `${genre}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify( params ),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/manhwas/genres', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        history.push(`/manhwa/${manhwa}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas()\r\n    }, [])\r\n\r\n    \r\nreturn (\r\n    <>\r\n        \r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} genreShown={genreShown}></ManhwaList>\r\n\r\n    </>\r\n);\r\n}\r\n\r\nexport default FilterByGenres;\r\n","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js",["273"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ResultsPage({setManhwaToShow}){\r\n    const filter = useParams();\r\n    const genre = JSON.parse(Object.values(filter))\r\n    const genreStr = []\r\n    for (const element of genre){\r\n        genreStr.push(element)\r\n    }\r\n\r\n    const [manhwas, setManhwas] = useState([]);\r\n        const history = useHistory(); \r\n    \r\n        const loadManhwas = async () => {\r\n            const params = {\"genres\": genreStr};\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(params),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/manhwas/filter', options)\r\n            const data = await response.json()\r\n            setManhwas(data);\r\n        };\r\n    \r\n        const manhwaShown = manhwa => {\r\n            setManhwaToShow(manhwa);\r\n            history.push(`/manhwa/${manhwa.title}`);\r\n        }\r\n    \r\n        useEffect(() => {\r\n            loadManhwas()\r\n        }, [])\r\n    \r\n        \r\n    return(\r\n        <>\r\n        <p>Results for {genreStr}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n\r\n\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown}></ManhwaList>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ResultsPage;","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js",["274"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\n\r\nfunction SearchResultsPage ({setManhwaToShow}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const history = useHistory(); \r\n\r\n    const {search} = useParams(); \r\n    const searchManhwas = async () => {\r\n        const params = {\"title\" : `${search}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch ('/search', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    }\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        history.push(`/manhwa/${manhwa}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchManhwas()\r\n    }, [])\r\n\r\n    return(\r\n        \r\n        <>\r\n        <p>Results for {search}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} ></ManhwaList>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultsPage; ","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js",["275","276","277","278","279"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js",["280"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js",["281","282"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\index.js",[],["283","284"],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\App.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js",["285"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\n\r\nfunction SearchResultsPage ({setManhwaToShow}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const navigate = useNavigate(); \r\n\r\n    const {search} = useParams(); \r\n    const searchManhwas = async () => {\r\n        const params = {\"title\" : `${search}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch ('/search', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    }\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchManhwas()\r\n    }, [search])\r\n\r\n    return(\r\n        \r\n        <>\r\n        <p>Results for {search}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} ></ManhwaList>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultsPage; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js",["286"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ResultsPage({setManhwaToShow}){\r\n    const filter = useParams();\r\n    const genre = JSON.parse(Object.values(filter))\r\n    const genreStr = []\r\n    for (const element of genre){\r\n        genreStr.push(element)\r\n    }\r\n\r\n    const [manhwas, setManhwas] = useState([]);\r\n        const navigate = useNavigate(); \r\n    \r\n        const loadManhwas = async () => {\r\n            const params = {\"genres\": genreStr};\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(params),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/manhwas/filter', options)\r\n            const data = await response.json()\r\n            setManhwas(data);\r\n        };\r\n    \r\n        const manhwaShown = manhwa => {\r\n            setManhwaToShow(manhwa);\r\n            navigate(`/manhwa/${manhwa.title}`);\r\n        }\r\n    \r\n        useEffect(() => {\r\n            loadManhwas()\r\n        }, [])\r\n    \r\n        \r\n    return(\r\n        <>\r\n        <p>Results for {genreStr}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n\r\n\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown}></ManhwaList>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ResultsPage;","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js",["287","288"],"import React from 'react'\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n//https://github.com/gitdagray/react_register_form/blob/main/src/Register.js\r\n// https://stackoverflow.com/questions/46155/how-can-i-validate-an-email-address-in-javascript\r\nconst EMAIL_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\n\r\n\r\nfunction Register() {\r\n\r\n    const errRef = useRef();\r\n\r\n    const [username, setUser] = useState();\r\n    const [validName, setValidName] = useState(false);\r\n\r\n    const [email, setEmail] = useState();\r\n    const [validEmail, setValidEmail] = useState(false);\r\n\r\n    const [password, setPassword] = useState();\r\n    const [validPassword, setValidPassword] = useState(false);\r\n\r\n    const [matchPassword, setMatchPassword] = useState();\r\n    const [validMatch, setValidMatch] = useState(false);\r\n\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [success, setSuccess] = useState(false);\r\n\r\n\r\n    // confirm user\r\n    useEffect(() => {\r\n        const result = USER_REGEX.test(username);\r\n        setValidName(result);\r\n        console.log(validName)\r\n    }, [username])\r\n\r\n    // confirm email\r\n    useEffect(() => {\r\n        const result = EMAIL_REGEX.test(email);\r\n\r\n        setValidEmail(result);\r\n    }, [email]);\r\n\r\n    // confirm password \r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(password);\r\n        setValidPassword(result);\r\n\r\n        // compare password with match password \r\n        if (password === matchPassword) {\r\n            setValidMatch(password);\r\n        }\r\n\r\n    }, [password, matchPassword]);\r\n\r\n    // error message\r\n    useEffect(() => {\r\n        setErrorMessage('');\r\n    }, [email, password, matchPassword])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (validEmail && validPassword && validMatch && validName) {\r\n            const newUser = { username, email, password }\r\n            const response = await fetch('/register', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newUser),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            const data = await response.json()\r\n            if (response.status === 201) {\r\n                setSuccess(true)\r\n            }\r\n            else if (response.status === 409) {\r\n                setErrorMessage('This email already has an account')\r\n                errRef.current.focus();\r\n            } else {\r\n                setErrorMessage('Registration Failed');\r\n                errRef.current.focus();\r\n            }\r\n        } else {\r\n\r\n            setErrorMessage('Unable to register account. Please enter valid information.')\r\n            errRef.current.focus();\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {(success ? <section>\r\n                Success!<Link to=\"/login\">Sign In</Link>\r\n            </section> : <>\r\n                <section>\r\n                    {/* error message */}\r\n                    <p ref={errRef} className={errorMessage ? \"errorMessage\" : \"offscreen\"}>{errorMessage}</p>\r\n                    <h1>Register</h1>\r\n                    <form>\r\n                        <label htmlFor=\"username\">\r\n                            Username\r\n                            {username ?\r\n                                validName ? <FontAwesomeIcon icon={faCheck} /> : <FontAwesomeIcon icon={faTimes} />\r\n                                : ''}\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"  \r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setUser(e.target.value)}\r\n                            required\r\n                        />\r\n                        <div className=\"tooltip\">\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            <span className=\"tooltiptext\">\r\n                                Username must be 4 to 24 characters and begin with a letter. <br />\r\n                                Letters, numbers, underscores, hyphens allowed.\r\n                            </span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"email\">\r\n                            Email\r\n                            {email ? validEmail ? <FontAwesomeIcon icon={faCheck} /> : <FontAwesomeIcon icon={faTimes} /> : ''}\r\n                        </label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            autoComplete=\"off\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"password\">\r\n                            Password\r\n                            {password ? validPassword ? <FontAwesomeIcon icon={faCheck} /> : <FontAwesomeIcon icon={faTimes} /> : ''}\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            value={password}\r\n                            required\r\n                        />\r\n                        <div className=\"tooltip\">\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            <span className=\"tooltiptext\">\r\n                                Password must be 8 to 24 characters. Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            </span>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <label htmlFor=\"confirm_password\">\r\n                            Confirm Password\r\n                            {matchPassword ? validMatch ? <FontAwesomeIcon icon={faCheck} /> : <FontAwesomeIcon icon={faTimes} /> : ''}\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_password\"\r\n                            onChange={(e) => setMatchPassword(e.target.value)}\r\n                            required\r\n                        />\r\n\r\n                        <br />\r\n\r\n                        <button onClick={handleSubmit}>Sign Up</button>\r\n                    </form>\r\n                    Already have an account?\r\n                    <br />\r\n                    <Link to=\"/login\">Sign In</Link>\r\n                </section>\r\n\r\n            </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js",["289","290"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport User from '../components/User';\r\n\r\nfunction UserPage({ setManhwaToShow, userStatus }) {\r\n  const [user, setUser] = useState();\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const { auth } = useAuth();\r\n\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const controller = new AbortController();\r\n\r\n    const loadUser = async () => {\r\n      try {\r\n        const response = await axiosPrivate.post('/user',\r\n          JSON.stringify({ \"email\": auth.email }),\r\n          { signal: controller.signal }\r\n        )\r\n        isMounted = false\r\n        setUser(response.data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    loadUser()\r\n\r\n    return () => {\r\n\r\n      isMounted = false;\r\n      controller.abort();\r\n    }\r\n\r\n  }, [])\r\n\r\n\r\n    return (\r\n      <article>\r\n        <h2>User page</h2>\r\n        {\r\n          user ? <User user={user} setManhwaToShow={setManhwaToShow} userStatus={userStatus} /> : <p></p>\r\n\r\n        }\r\n      </article>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UserPage","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js",["291"],"import { Link, useNavigate } from 'react-router-dom';\r\nimport Logo from '../Logo1.png';\r\nimport Search from './Search'\r\nimport useLogout from '../hooks/useLogout';\r\nimport useAuth from '../hooks/useAuth'\r\n\r\nfunction Navigation({setUserStatus, userStatus}) {\r\n    const logout = useLogout();\r\n    const navigate = useNavigate();\r\n    const { auth } = useAuth(); \r\n\r\n    const signOut = async () => {\r\n        await logout();\r\n        setUserStatus('LoggedOut')\r\n        navigate('/');\r\n    }\r\n    \r\n    return (\r\n        <nav className=\"menu\">\r\n            <Link to=\"/\" exact> <img src={Logo} /> </Link>\r\n            <Link to=\"/\" exact> Home </Link>\r\n            <Link to=\"/browse-all\"> Browse </Link>\r\n            <Link to=\"/information\">Help</Link>\r\n\r\n            {\r\n                userStatus === 'LoggedIn' ?\r\n                    <>\r\n                        <Link to=\"/user-page\">{auth.username}</Link>\r\n                        <button onClick={signOut}>Log out</button>\r\n                    </> :\r\n                    <>\r\n                        <Link to=\"/register\">Register</Link>\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </>\r\n\r\n            }\r\n\r\n            <Search />\r\n        </nav>\r\n    );\r\n\r\n};\r\n\r\nexport default Navigation; \r\n","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js",["292"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction Genre( { genre, setManhwaToShow, genreShown}) {\r\n        const [manhwas, setManhwas] = useState([]);\r\n        const navigate = useNavigate(); \r\n    \r\n        const loadManhwas = async () => {\r\n            const params = {\"genres\": `${genre}`};\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify( params ),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/manhwas/genres', options)\r\n            const data = await response.json()\r\n            setManhwas(data);\r\n        };\r\n    \r\n        const manhwaShown = manhwa => {\r\n            setManhwaToShow(manhwa);\r\n            navigate(`/manhwa/${manhwa.title}`);\r\n        }\r\n    \r\n        useEffect(() => {\r\n            loadManhwas()\r\n        }, [])\r\n        \r\n        \r\n    return (\r\n        <>\r\n            \r\n            <h4>{genre}</h4>\r\n\r\n            <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} genreShown={genreShown}></ManhwaList>\r\n\r\n            <Link to= {`/genre/${genre}`} genre={genre}>more from {genre}</Link>\r\n            <hr></hr>\r\n        \r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Genre;\r\n","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js",["293"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction FilterByGenres( { genre, setManhwaToShow, genreShown}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const navigate = useNavigate(); \r\n\r\n    const loadManhwas = async () => {\r\n        const params = {\"genres\": `${genre}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify( params ),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/manhwas/genres', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas()\r\n    }, [])\r\n\r\n    \r\nreturn (\r\n    <>\r\n        \r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} genreShown={genreShown}></ManhwaList>\r\n\r\n    </>\r\n);\r\n}\r\n\r\nexport default FilterByGenres;\r\n","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js",["294"],"import useAuth from './useAuth';\r\n\r\nconst useRefreshToken = () => {\r\n    const { setAuth, auth } = useAuth();\r\n\r\n    const refresh = async () => {\r\n        const response = await fetch('/refresh', {\r\n            method: 'GET',\r\n            credentials: 'same-origin'\r\n        });\r\n        const data = await response.json()\r\n        const accessToken = data.accessToken;\r\n        const email = data.email;\r\n        setAuth(prev => {\r\n            return { ...prev, email: email, accessToken: accessToken}\r\n        });\r\n        return accessToken\r\n    }\r\n    return refresh;\r\n}\r\n\r\nexport default useRefreshToken; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\PersistLogin.js",["295"],"import { Outlet } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useRefreshToken from '../hooks/useRefreshToken';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst PersistLogin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const refresh = useRefreshToken();\r\n    const { auth } = useAuth();\r\n\r\n    useEffect(() => {\r\n\r\n        const verifyRefreshToken = async () => {\r\n            try {\r\n                await refresh();\r\n            } catch (error) {\r\n                console.error(error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        !auth?.accessToken ? verifyRefreshToken() : setIsLoading(false);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading\r\n                ? <p>Loading...</p>\r\n                : <Outlet />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersistLogin","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useLogout.js",["296"],"import useAuth from './useAuth';\r\n\r\nconst useLogout = () => {\r\n    const { setAuth } = useAuth();\r\n\r\n    const logout = async () => {\r\n        setAuth({});\r\n\r\n        try {\r\n            const response = await fetch('/logout', {\r\n                method: 'GET',\r\n\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n\r\n    }\r\n\r\n    return logout;\r\n}\r\n\r\nexport default useLogout; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\User.js",["297","298"],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ReadingList from './ReadingList'\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst User = ({ user, setManhwaToShow, userStatus }) => {\r\n    const [username] = useState(user.username)\r\n    const [readingList] = useState(user.readingList)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    console.log(readingList.length)\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa.title}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            Welcome {username}!\r\n            <p>Reading List</p>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Image</th>\r\n                        <th>Manhwa</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <tbody>\r\n                {readingList.map((manhwaID, i) => <ReadingList manhwaID={manhwaID} manhwaShown={manhwaShown} key={i} index={readingList.indexOf(manhwaID)} userStatus={userStatus} />)}\r\n            </tbody>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Image.js",["299"],"import React, {useEffect, useState} from 'react'\r\n\r\nconst Image = ({ url, height, width }) => {\r\n\r\n    const [image, setImage] = useState();\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            const getData = async (url) => {\r\n                const response = await fetch('/get-data', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ url }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                const data = await response.json()\r\n    \r\n                setImage(data.image)\r\n                \r\n                \r\n            }\r\n            getData(url)\r\n        }\r\n\r\n\r\n    }, [url])\r\n    \r\n  return (\r\n    \r\n    <img src= {`${image}`} height={height} width={width} ></img>\r\n    \r\n  )\r\n}\r\n\r\nexport default Image; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Description.js",["300"],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingList.js",["301"],"import React, { useState, useEffect } from 'react'\r\nimport ReadingListButton from './ReadingListButton'\r\nimport Image from './Image'\r\n\r\nconst ReadingList = ({ manhwaID, manhwaShown , index, userStatus}) => {\r\n    const [manhwa, setManhwa] = useState();\r\n    index = index + 1\r\n    useEffect(() => {\r\n\r\n        const getManhwa = async () => {\r\n            const params = { _id: `${manhwaID}` }\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(params),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/one-manhwa', options)\r\n            const data = await response.json()\r\n            setManhwa(data)\r\n        }\r\n\r\n        getManhwa();\r\n        \r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            {manhwa ?\r\n                <tr>\r\n                    <td>{index}</td>\r\n                    <td><Image url={manhwa.url} height={100} width={70} /></td>\r\n                    <td>{manhwa.title}</td>\r\n                    <td><ReadingListButton userStatus={userStatus} id={manhwa._id} buttonmsg={'Undo'} /></td>\r\n                </tr>\r\n                \r\n                : <p></p>\r\n\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ReadingList","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingListButton.js",["302","303","304","305"],{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":7,"column":8,"nodeType":"312","messageId":"313","endLine":7,"endColumn":13},{"ruleId":"314","severity":1,"message":"315","line":10,"column":35,"nodeType":"316","endLine":10,"endColumn":52},{"ruleId":"314","severity":1,"message":"315","line":21,"column":37,"nodeType":"316","endLine":21,"endColumn":93},{"ruleId":"310","severity":1,"message":"317","line":6,"column":12,"nodeType":"312","messageId":"313","endLine":6,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":33,"column":12,"nodeType":"320","endLine":33,"endColumn":14,"suggestions":"321"},{"ruleId":"318","severity":1,"message":"319","line":32,"column":8,"nodeType":"320","endLine":32,"endColumn":10,"suggestions":"322"},{"ruleId":"318","severity":1,"message":"319","line":40,"column":12,"nodeType":"320","endLine":40,"endColumn":14,"suggestions":"323"},{"ruleId":"318","severity":1,"message":"324","line":33,"column":8,"nodeType":"320","endLine":33,"endColumn":10,"suggestions":"325"},{"ruleId":"310","severity":1,"message":"326","line":20,"column":12,"nodeType":"312","messageId":"313","endLine":20,"endColumn":21},{"ruleId":"310","severity":1,"message":"327","line":23,"column":12,"nodeType":"312","messageId":"313","endLine":23,"endColumn":22},{"ruleId":"310","severity":1,"message":"328","line":27,"column":12,"nodeType":"312","messageId":"313","endLine":27,"endColumn":25},{"ruleId":"310","severity":1,"message":"329","line":30,"column":12,"nodeType":"312","messageId":"313","endLine":30,"endColumn":22},{"ruleId":"310","severity":1,"message":"330","line":85,"column":19,"nodeType":"312","messageId":"313","endLine":85,"endColumn":23},{"ruleId":"310","severity":1,"message":"331","line":5,"column":13,"nodeType":"312","messageId":"313","endLine":5,"endColumn":17},{"ruleId":"310","severity":1,"message":"332","line":12,"column":11,"nodeType":"312","messageId":"313","endLine":12,"endColumn":20},{"ruleId":"318","severity":1,"message":"333","line":38,"column":8,"nodeType":"320","endLine":38,"endColumn":10,"suggestions":"334"},{"ruleId":"306","replacedBy":"335"},{"ruleId":"308","replacedBy":"336"},{"ruleId":"318","severity":1,"message":"324","line":33,"column":8,"nodeType":"320","endLine":33,"endColumn":16,"suggestions":"337"},{"ruleId":"318","severity":1,"message":"319","line":40,"column":12,"nodeType":"320","endLine":40,"endColumn":14,"suggestions":"338"},{"ruleId":"318","severity":1,"message":"339","line":40,"column":8,"nodeType":"320","endLine":40,"endColumn":18,"suggestions":"340"},{"ruleId":"310","severity":1,"message":"330","line":78,"column":19,"nodeType":"312","messageId":"313","endLine":78,"endColumn":23},{"ruleId":"310","severity":1,"message":"332","line":14,"column":9,"nodeType":"312","messageId":"313","endLine":14,"endColumn":18},{"ruleId":"318","severity":1,"message":"341","line":38,"column":6,"nodeType":"320","endLine":38,"endColumn":8,"suggestions":"342"},{"ruleId":"314","severity":1,"message":"315","line":20,"column":33,"nodeType":"316","endLine":20,"endColumn":51},{"ruleId":"318","severity":1,"message":"319","line":33,"column":12,"nodeType":"320","endLine":33,"endColumn":14,"suggestions":"343"},{"ruleId":"318","severity":1,"message":"319","line":32,"column":8,"nodeType":"320","endLine":32,"endColumn":10,"suggestions":"344"},{"ruleId":"310","severity":1,"message":"331","line":4,"column":22,"nodeType":"312","messageId":"313","endLine":4,"endColumn":26},{"ruleId":"318","severity":1,"message":"345","line":25,"column":8,"nodeType":"320","endLine":25,"endColumn":10,"suggestions":"346"},{"ruleId":"310","severity":1,"message":"347","line":10,"column":19,"nodeType":"312","messageId":"313","endLine":10,"endColumn":27},{"ruleId":"310","severity":1,"message":"348","line":1,"column":17,"nodeType":"312","messageId":"313","endLine":1,"endColumn":26},{"ruleId":"310","severity":1,"message":"349","line":4,"column":8,"nodeType":"312","messageId":"313","endLine":4,"endColumn":12},{"ruleId":"314","severity":1,"message":"315","line":31,"column":5,"nodeType":"316","endLine":31,"endColumn":59},{"ruleId":"318","severity":1,"message":"350","line":24,"column":8,"nodeType":"320","endLine":24,"endColumn":10,"suggestions":"351"},{"ruleId":"318","severity":1,"message":"352","line":26,"column":8,"nodeType":"320","endLine":26,"endColumn":10,"suggestions":"353"},{"ruleId":"310","severity":1,"message":"354","line":2,"column":10,"nodeType":"312","messageId":"313","endLine":2,"endColumn":14},{"ruleId":"355","severity":1,"message":"356","line":55,"column":32,"nodeType":"357","messageId":"358","endLine":55,"endColumn":34},{"ruleId":"355","severity":1,"message":"356","line":58,"column":39,"nodeType":"357","messageId":"358","endLine":58,"endColumn":41},{"ruleId":"318","severity":1,"message":"359","line":73,"column":8,"nodeType":"320","endLine":73,"endColumn":10,"suggestions":"360"},"no-native-reassign",["361"],"no-negated-in-lhs",["362"],"no-unused-vars","'Genre' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'image' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadManhwas'. Either include it or remove the dependency array.","ArrayExpression",["363"],["364"],["365"],"React Hook useEffect has a missing dependency: 'searchManhwas'. Either include it or remove the dependency array.",["366"],"'validName' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.","'validMatch' is assigned a value but never used.","'data' is assigned a value but never used.","'auth' is assigned a value but never used.","'isMounted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.email', 'axiosPrivate', and 'user'. Either include them or remove the dependency array.",["367"],["361"],["362"],["368"],["369"],"React Hook useEffect has a missing dependency: 'validName'. Either include it or remove the dependency array.",["370"],"React Hook useEffect has missing dependencies: 'auth.email' and 'axiosPrivate'. Either include them or remove the dependency array.",["371"],["372"],["373"],"React Hook useEffect has missing dependencies: 'auth?.accessToken' and 'refresh'. Either include them or remove the dependency array.",["374"],"'response' is assigned a value but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["375"],"React Hook useEffect has a missing dependency: 'manhwaID'. Either include it or remove the dependency array.",["376"],"'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'checkManhwa' and 'userStatus'. Either include them or remove the dependency array.",["377"],"no-global-assign","no-unsafe-negation",{"desc":"378","fix":"379"},{"desc":"378","fix":"380"},{"desc":"378","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"378","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"378","fix":"393"},{"desc":"378","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},"Update the dependencies array to be: [loadManhwas]",{"range":"403","text":"404"},{"range":"405","text":"404"},{"range":"406","text":"404"},"Update the dependencies array to be: [searchManhwas]",{"range":"407","text":"408"},"Update the dependencies array to be: [auth.email, axiosPrivate, user]",{"range":"409","text":"410"},"Update the dependencies array to be: [search, searchManhwas]",{"range":"411","text":"412"},{"range":"413","text":"404"},"Update the dependencies array to be: [username, validName]",{"range":"414","text":"415"},"Update the dependencies array to be: [auth.email, axiosPrivate]",{"range":"416","text":"417"},{"range":"418","text":"404"},{"range":"419","text":"404"},"Update the dependencies array to be: [auth?.accessToken, refresh]",{"range":"420","text":"421"},"Update the dependencies array to be: [url]",{"range":"422","text":"423"},"Update the dependencies array to be: [manhwaID]",{"range":"424","text":"425"},"Update the dependencies array to be: [checkManhwa, userStatus]",{"range":"426","text":"427"},[1072,1074],"[loadManhwas]",[935,937],[1292,1294],[1011,1013],"[searchManhwas]",[958,960],"[auth.email, axiosPrivate, user]",[1010,1018],"[search, searchManhwas]",[1291,1293],[1405,1415],"[username, validName]",[930,932],"[auth.email, axiosPrivate]",[1071,1073],[934,936],[722,724],"[auth?.accessToken, refresh]",[782,784],"[url]",[819,821],"[manhwaID]",[2549,2551],"[checkManhwa, userStatus]"]