[{"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\index.js":"1","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\App.js":"2","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js":"3","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js":"4","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js":"5","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js":"6","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js":"7","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js":"8","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js":"9","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js":"10","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js":"11","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js":"12","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js":"13","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js":"14","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js":"15","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js":"16","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js":"17","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js":"18","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js":"19","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js":"20","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js":"21","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js":"22","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js":"23","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js":"24","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js":"25","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js":"26","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js":"27","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\index.js":"28","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js":"29","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js":"30","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\App.js":"31","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js":"32","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js":"33","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js":"34","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js":"35","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js":"36","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js":"37","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js":"38","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js":"39","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js":"40","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js":"41","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js":"42","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js":"43","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js":"44","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js":"45","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js":"46","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js":"47","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js":"48","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js":"49","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js":"50","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js":"51","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js":"52","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js":"53","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js":"54","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\PersistLogin.js":"55","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useLogout.js":"56","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\User.js":"57","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Image.js":"58","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Description.js":"59","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingList.js":"60","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingListButton.js":"61"},{"size":619,"mtime":1659608800561,"results":"62","hashOfConfig":"63"},{"size":2625,"mtime":1659608800554,"results":"64","hashOfConfig":"63"},{"size":362,"mtime":1657325489987,"results":"65","hashOfConfig":"63"},{"size":3217,"mtime":1659608800561,"results":"66","hashOfConfig":"63"},{"size":577,"mtime":1659609939389,"results":"67","hashOfConfig":"63"},{"size":652,"mtime":1659608800557,"results":"68","hashOfConfig":"63"},{"size":1887,"mtime":1659608800556,"results":"69","hashOfConfig":"63"},{"size":892,"mtime":1659610021143,"results":"70","hashOfConfig":"63"},{"size":1446,"mtime":1659609814745,"results":"71","hashOfConfig":"63"},{"size":416,"mtime":1657416592353,"results":"72","hashOfConfig":"63"},{"size":1133,"mtime":1657416860205,"results":"73","hashOfConfig":"63"},{"size":866,"mtime":1657398936313,"results":"74","hashOfConfig":"63"},{"size":376,"mtime":1657406794520,"results":"75","hashOfConfig":"63"},{"size":1627,"mtime":1657480118124,"results":"76","hashOfConfig":"63"},{"size":770,"mtime":1657436758563,"results":"77","hashOfConfig":"63"},{"size":1332,"mtime":1657480144404,"results":"78","hashOfConfig":"63"},{"size":590,"mtime":1657483972340,"results":"79","hashOfConfig":"63"},{"size":2856,"mtime":1657602956887,"results":"80","hashOfConfig":"63"},{"size":5934,"mtime":1659610003739,"results":"81","hashOfConfig":"63"},{"size":196,"mtime":1659608800555,"results":"82","hashOfConfig":"63"},{"size":2999,"mtime":1659609988011,"results":"83","hashOfConfig":"63"},{"size":384,"mtime":1659608800559,"results":"84","hashOfConfig":"63"},{"size":305,"mtime":1659608800559,"results":"85","hashOfConfig":"63"},{"size":433,"mtime":1659608800558,"results":"86","hashOfConfig":"63"},{"size":1079,"mtime":1659609679147,"results":"87","hashOfConfig":"63"},{"size":595,"mtime":1659608800560,"results":"88","hashOfConfig":"63"},{"size":1634,"mtime":1659608800560,"results":"89","hashOfConfig":"63"},{"size":619,"mtime":1659657365273,"results":"90","hashOfConfig":"91"},{"size":574,"mtime":1659917890401,"results":"92","hashOfConfig":"91"},{"size":375,"mtime":1659657329826,"results":"93","hashOfConfig":"91"},{"size":2796,"mtime":1659919520596,"results":"94","hashOfConfig":"91"},{"size":758,"mtime":1659929907076,"results":"95","hashOfConfig":"91"},{"size":3272,"mtime":1659933302648,"results":"96","hashOfConfig":"91"},{"size":1451,"mtime":1659918567261,"results":"97","hashOfConfig":"91"},{"size":1298,"mtime":1659921828699,"results":"98","hashOfConfig":"91"},{"size":1640,"mtime":1659935529215,"results":"99","hashOfConfig":"91"},{"size":429,"mtime":1659918165815,"results":"100","hashOfConfig":"91"},{"size":3704,"mtime":1659936128702,"results":"101","hashOfConfig":"91"},{"size":7634,"mtime":1659974089277,"results":"102","hashOfConfig":"91"},{"size":1170,"mtime":1659933700269,"results":"103","hashOfConfig":"91"},{"size":3500,"mtime":1659929097339,"results":"104","hashOfConfig":"91"},{"size":1282,"mtime":1659918861263,"results":"105","hashOfConfig":"91"},{"size":442,"mtime":1659917714866,"results":"106","hashOfConfig":"91"},{"size":626,"mtime":1659935193495,"results":"107","hashOfConfig":"91"},{"size":1597,"mtime":1659936931735,"results":"108","hashOfConfig":"91"},{"size":900,"mtime":1659916075992,"results":"109","hashOfConfig":"91"},{"size":390,"mtime":1659933196637,"results":"110","hashOfConfig":"91"},{"size":1894,"mtime":1659933050913,"results":"111","hashOfConfig":"91"},{"size":1179,"mtime":1659923944270,"results":"112","hashOfConfig":"91"},{"size":755,"mtime":1659930870090,"results":"113","hashOfConfig":"91"},{"size":318,"mtime":1659917875417,"results":"114","hashOfConfig":"91"},{"size":1775,"mtime":1659917992636,"results":"115","hashOfConfig":"91"},{"size":850,"mtime":1659918085241,"results":"116","hashOfConfig":"91"},{"size":196,"mtime":1659657365270,"results":"117","hashOfConfig":"91"},{"size":1112,"mtime":1659916313050,"results":"118","hashOfConfig":"91"},{"size":548,"mtime":1659918023174,"results":"119","hashOfConfig":"91"},{"size":1314,"mtime":1659934750214,"results":"120","hashOfConfig":"91"},{"size":856,"mtime":1659916175780,"results":"121","hashOfConfig":"91"},{"size":926,"mtime":1659916159360,"results":"122","hashOfConfig":"91"},{"size":1389,"mtime":1659917378621,"results":"123","hashOfConfig":"91"},{"size":3163,"mtime":1659935253066,"results":"124","hashOfConfig":"91"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yxb3gv",{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"131"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"131"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"131"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"3ayxat",{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"185"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"185"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"185"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"185"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"185"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"185"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"185"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"185"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"185"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"185"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"185"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"185"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"185"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"185"},"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\index.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\App.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js",[],["266","267"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js",["268"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js",["269"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js",["270"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js",["271"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js",["272"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js",["273"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction FilterByGenres( { genre, setManhwaToShow, genreShown}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const history = useHistory(); \r\n\r\n    const loadManhwas = async () => {\r\n        const params = {\"genres\": `${genre}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify( params ),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/manhwas/genres', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        history.push(`/manhwa/${manhwa}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas()\r\n    }, [])\r\n\r\n    \r\nreturn (\r\n    <>\r\n        \r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} genreShown={genreShown}></ManhwaList>\r\n\r\n    </>\r\n);\r\n}\r\n\r\nexport default FilterByGenres;\r\n","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js",["274"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ResultsPage({setManhwaToShow}){\r\n    const filter = useParams();\r\n    const genre = JSON.parse(Object.values(filter))\r\n    const genreStr = []\r\n    for (const element of genre){\r\n        genreStr.push(element)\r\n    }\r\n\r\n    const [manhwas, setManhwas] = useState([]);\r\n        const history = useHistory(); \r\n    \r\n        const loadManhwas = async () => {\r\n            const params = {\"genres\": genreStr};\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(params),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/manhwas/filter', options)\r\n            const data = await response.json()\r\n            setManhwas(data);\r\n        };\r\n    \r\n        const manhwaShown = manhwa => {\r\n            setManhwaToShow(manhwa);\r\n            history.push(`/manhwa/${manhwa.title}`);\r\n        }\r\n    \r\n        useEffect(() => {\r\n            loadManhwas()\r\n        }, [])\r\n    \r\n        \r\n    return(\r\n        <>\r\n        <p>Results for {genreStr}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n\r\n\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown}></ManhwaList>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ResultsPage;","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js",["275"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\n\r\nfunction SearchResultsPage ({setManhwaToShow}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const history = useHistory(); \r\n\r\n    const {search} = useParams(); \r\n    const searchManhwas = async () => {\r\n        const params = {\"title\" : `${search}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch ('/search', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    }\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        history.push(`/manhwa/${manhwa}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchManhwas()\r\n    }, [])\r\n\r\n    return(\r\n        \r\n        <>\r\n        <p>Results for {search}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} ></ManhwaList>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultsPage; ","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js",["276","277","278","279","280"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js",["281"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js",["282","283"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\index.js",[],["284","285"],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\context\\AuthProvider.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\App.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js",["286"],"import React from 'react';\r\nimport Genre from '../components/Genre';\r\nimport FeaturesText from '../components/FeaturesText';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nfunction HomePage({ setManhwaToShow, setGenreToShow }) {\r\n    const genreHome = [\"Fantasy\", \"Romance\", \"Action\", \"Drama\"]\r\n    const { auth } = useAuth();\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <h1>Basic Features</h1>\r\n            <section className=\"features\">\r\n                <FeaturesText />\r\n            </section>\r\n            <h2>Top Genres</h2>\r\n            {genreHome.map((genre, i) => <Genre genre={genre}\r\n                setManhwaToShow={setManhwaToShow} limit={5}\r\n                key={i} />)}\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js",["287"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\n\r\nfunction SearchResultsPage({ setManhwaToShow }) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const { search } = useParams();\r\n\r\n    // get manhwas based on search input \r\n    const searchManhwas = async () => {\r\n        const params = { \"title\": `${search}` };\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/search', options)\r\n        const data = await response.json();\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa}`);\r\n    };\r\n\r\n    // load manhwas each time search input is changed \r\n    useEffect(() => {\r\n        searchManhwas();\r\n    }, [search]);\r\n\r\n    return (\r\n\r\n        <>\r\n            <p>Results for {search}</p>\r\n            <i>Not what you wanted?</i>\r\n            <Link to={`/browse-all`}>Go back to browse all</Link>\r\n            <ManhwaList manhwas={manhwas} manhwaShown={manhwaShown} ></ManhwaList>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultsPage; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js",["288"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ResultsPage({ setManhwaToShow }) {\r\n    const filter = useParams();\r\n    const genre = JSON.parse(Object.values(filter));\r\n    const genreStr = [];\r\n\r\n    // set genre fitler to array \r\n    for (const element of genre) {\r\n        genreStr.push(element)\r\n    };\r\n\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    // get manhwas based on filter \r\n    const loadManhwas = async () => {\r\n        const params = { \"genres\": genreStr };\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/manhwas/filter', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa.title}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Results for {genreStr.join(\", \")}</h2>\r\n            <i>Not what you wanted?</i>\r\n            <br></br>\r\n            <Link to={`/browse-all`}>Go back to browse all</Link>\r\n            <ManhwaList manhwas={manhwas} manhwaShown={manhwaShown}></ManhwaList>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ResultsPage;","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\RegisterPage.js",["289","290"],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\UserPage.js",["291","292"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport useAuth from '../hooks/useAuth';\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport User from '../components/User';\r\n\r\nfunction UserPage({ setManhwaToShow, userStatus }) {\r\n  const [user, setUser] = useState();\r\n  const axiosPrivate = useAxiosPrivate();\r\n  const { auth } = useAuth();\r\n\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const controller = new AbortController();\r\n\r\n    const loadUser = async () => {\r\n      try {\r\n        const response = await axiosPrivate.post('/user',\r\n          JSON.stringify({ \"email\": auth.email }),\r\n          { signal: controller.signal }\r\n        )\r\n        isMounted = false\r\n        setUser(response.data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      };\r\n    };\r\n\r\n    loadUser();\r\n\r\n    return () => {\r\n\r\n      isMounted = false;\r\n      controller.abort();\r\n    }\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <article>\r\n      {\r\n        user ?\r\n          <User user={user} setManhwaToShow={setManhwaToShow} userStatus={userStatus} />\r\n          : <p></p>\r\n      }\r\n\r\n    </article>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default UserPage","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\pages\\LoginPage.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js",["293"],"import { Link, useNavigate } from 'react-router-dom';\r\nimport Logo from '../Logo1.png';\r\nimport Search from './Search'\r\nimport useLogout from '../hooks/useLogout';\r\nimport useAuth from '../hooks/useAuth'\r\n\r\nfunction Navigation({ setUserStatus, userStatus }) {\r\n    const logout = useLogout();\r\n    const navigate = useNavigate();\r\n    const { auth } = useAuth();\r\n\r\n    const signOut = async () => {\r\n        await logout();\r\n        setUserStatus('LoggedOut')\r\n        navigate('/');\r\n    }\r\n\r\n    return (\r\n        <nav className=\"menu\">\r\n            <Link to=\"/\" exact> <img src={Logo} /> </Link>\r\n            \r\n            <Link to=\"/\" exact> Home </Link>\r\n            <Link to=\"/browse-all\"> Browse </Link>\r\n            <Link to=\"/information\">Help</Link>\r\n\r\n            {\r\n                userStatus === 'LoggedIn' ?\r\n                    <>\r\n                        <Link to=\"/user-page\">{auth.username}</Link>\r\n                        <button onClick={signOut}>Log out</button>\r\n                    </> :\r\n                    <>\r\n                        <Link to=\"/register\">Register</Link>\r\n                        <Link to=\"/login\">Login</Link>\r\n                    </>\r\n\r\n            }\r\n            <Search />\r\n        </nav>\r\n    );\r\n\r\n};\r\n\r\nexport default Navigation; \r\n","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\RequireAuth.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js",["294"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Genre({ genre, setManhwaToShow, genreShown, limit }) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    // fetch manhwas by specific genre\r\n    const loadManhwas = async () => {\r\n        const params = { \"genres\": `${genre}`, limit: limit };\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/manhwas/genres', options);\r\n        const data = await response.json();\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa.title}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <hr className=\"genre-border\" />\r\n            <section className='genre-sec'>\r\n                <h3>{genre}</h3>\r\n                <Link to={`/genre/${genre}`} genre={genre}> &gt; more from {genre}</Link>\r\n            </section>\r\n            <hr />\r\n            <br></br>\r\n            <section className=\"display-manhwa\">\r\n                <ManhwaList manhwas={manhwas} manhwaShown={manhwaShown} genreShown={genreShown}></ManhwaList>\r\n            </section>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Genre;\r\n","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js",["295"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction FilterByGenres({ genre, setManhwaToShow, genreShown }) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    // fetch manhwas by specific genre\r\n    const loadManhwas = async () => {\r\n        const params = { \"genres\": `${genre}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/manhwas/genres', options);\r\n        const data = await response.json();\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <ManhwaList manhwas={manhwas} manhwaShown={manhwaShown} genreShown={genreShown}></ManhwaList>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FilterByGenres;\r\n","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAuth.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useAxiosPrivate.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useRefreshToken.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\api\\axios.js",[],"C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\PersistLogin.js",["296"],"import { Outlet } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useRefreshToken from '../hooks/useRefreshToken';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\n// Citation for the following function\r\n// Date: 08.07.22\r\n// Altered from:\r\n// https://github.com/gitdagray/react_persist_login/blob/main/src/components/PersistLogin.js\r\n// Author: Dave Gray\r\n\r\nconst PersistLogin = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const refresh = useRefreshToken();\r\n    const { auth } = useAuth();\r\n\r\n    useEffect(() => {\r\n\r\n        const verifyRefreshToken = async () => {\r\n            try {\r\n                await refresh();\r\n            } catch (error) {\r\n                console.error(error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        !auth?.accessToken ? verifyRefreshToken() : setIsLoading(false);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading\r\n                ? <p>Loading...</p>\r\n                : <Outlet />\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersistLogin","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\hooks\\useLogout.js",["297"],"import useAuth from './useAuth';\r\n\r\nconst useLogout = () => {\r\n    const { setAuth } = useAuth();\r\n\r\n    const logout = async () => {\r\n        // clear auth data \r\n        setAuth({});\r\n\r\n        try {\r\n            const response = await fetch('/logout', {\r\n                method: 'GET',\r\n\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n\r\n    }\r\n\r\n    return logout;\r\n};\r\n\r\nexport default useLogout; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\User.js",["298","299"],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ReadingList from './ReadingList'\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst User = ({ user, setManhwaToShow, userStatus }) => {\r\n    const [username] = useState(user.username)\r\n    const [readingList] = useState(user.readingList)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        navigate(`/manhwa/${manhwa.title}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-page\">\r\n\r\n            <h2>Welcome {username}!</h2>\r\n            <h4>Reading List</h4>\r\n            <section className=\"reading-list\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Image</th>\r\n                        <th>Manhwa</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <tbody>\r\n                {readingList.map((manhwaID, i) => <ReadingList manhwaID={manhwaID} manhwaShown={manhwaShown} key={i} index={readingList.indexOf(manhwaID)} userStatus={userStatus} />)}\r\n            \r\n            </tbody>\r\n            </section>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Image.js",["300"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst Image = ({ url, height, width }) => {\r\n    const [image, setImage] = useState();\r\n\r\n    // fetch image from microservice\r\n    useEffect(() => {\r\n        \r\n        if (url) {\r\n            const getData = async (url) => {\r\n                const response = await fetch('/get-data', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ url }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                const data = await response.json();\r\n\r\n                setImage(data.image);\r\n            }\r\n            getData(url);\r\n        }\r\n\r\n\r\n    }, [url])\r\n\r\n    return (\r\n\r\n        <img src={`${image}`} height={height} width={width} ></img>\r\n\r\n    )\r\n}\r\n\r\nexport default Image; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\Description.js",["301"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst Description = ({ url }) => {\r\n    const [description, setDescription] = useState();\r\n\r\n    // fetch description from microservice\r\n    useEffect(() => {\r\n\r\n        if (url) {\r\n            const getData = async (url) => {\r\n                const response = await fetch('/get-data', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ url }),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                const data = await response.json();\r\n                console.log(data.summary);\r\n                const summary = data.summary;\r\n                setDescription(summary.split('ⓒ', 1)[0]);\r\n            }\r\n            getData(url);\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <p>{description}</p>\r\n    )\r\n}\r\n\r\nexport default Description; ","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingList.js",["302","303"],"import React, { useState, useEffect } from 'react'\r\nimport ReadingListButton from './ReadingListButton'\r\nimport Image from './Image'\r\n\r\nconst ReadingList = ({ manhwaID, manhwaShown, index, userStatus }) => {\r\n    const [manhwa, setManhwa] = useState();\r\n    index = index + 1\r\n\r\n    // obtains a single manhwa on page load\r\n    useEffect(() => {\r\n\r\n        const getManhwa = async () => {\r\n            const params = { _id: `${manhwaID}` }\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(params),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/one-manhwa', options)\r\n            const data = await response.json()\r\n            setManhwa(data)\r\n        }\r\n\r\n        getManhwa();\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {manhwa ?\r\n                <tr>\r\n                    <td>{index}</td>\r\n                    <td><Image url={manhwa.url} height={100} width={70} /></td>\r\n                    <td onClick={() => manhwaShown(manhwa)}><a href=\"#\">{manhwa.title}</a></td>\r\n                    <td><ReadingListButton userStatus={userStatus} id={manhwa._id} buttonmsg={'Undo'} /></td>\r\n                </tr>\r\n\r\n                : <p></p>\r\n\r\n            }\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ReadingList","C:\\Users\\Katie\\Documents\\GitHub\\ManhwaUp\\manhwa-ui\\src\\components\\ReadingListButton.js",["304","305","306","307","308"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport useAuth from '../hooks/useAuth'\r\nimport useAxiosPrivate from '../hooks/useAxiosPrivate';\r\nimport { faExclamation } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst ReadingListButton = ({ userStatus, id, buttonmsg }) => {\r\n    const axiosPrivate = useAxiosPrivate();\r\n    const { auth } = useAuth();\r\n    const msgRef = useRef();\r\n\r\n    const [read, setRead] = useState();\r\n    const [message, setMessage] = useState();\r\n\r\n    // check if manhwa is already in reading list\r\n    const checkManhwa = async () => {\r\n        await axiosPrivate.post('/check-list',\r\n            JSON.stringify({ email: auth.email, manhwa: id }))\r\n            .then((response) => {\r\n                setRead(response.data);\r\n            });\r\n    };\r\n\r\n    const addManhwa = async () => {\r\n        const response = await fetch('/reading-list/add', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ user: auth.email, manhwa: id }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.status === 201) {\r\n            setMessage('Manhwa successfully added to your list.');\r\n            setRead(data)\r\n        } else if (data?.InList) {\r\n\r\n            setMessage('This manhwa is already in your list.');\r\n        } else {\r\n            setMessage('Unable to update your list at this time. Please try again later.');\r\n        }\r\n\r\n    };\r\n\r\n    const removeManhwa = async () => {\r\n        const response = await fetch('/reading-list/remove', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ user: auth.email, manhwa: id }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.modifiedCount == 1) {\r\n            setMessage('Manhwa successfully removed from your list.');\r\n            setRead();\r\n        } else if (data.modifiedCount == 0) {\r\n            setMessage('This manhwa is not in your list.');\r\n        } else {\r\n            setMessage('Unable to update your list at this time. Please try again later.');\r\n        }\r\n    };\r\n\r\n    // attempt to add manhwa when user is not loagged in \r\n    const updateAttempt = () => {\r\n        setMessage('You must be logged in to use this function.')\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userStatus === \"LoggedIn\") {\r\n            checkManhwa();\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userStatus === 'LoggedIn' ?\r\n                    read ? <button onClick={removeManhwa}>Remove from reading list</button> : <button onClick={addManhwa}>{buttonmsg}</button>\r\n                    :\r\n                    <>\r\n                        <button onClick={updateAttempt}>Add to reading list</button>\r\n                    </>\r\n\r\n            }\r\n            <p ref={msgRef} className={message ? \"message\" : \"offscreen\"}>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadingListButton\r\n",{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":7,"column":8,"nodeType":"315","messageId":"316","endLine":7,"endColumn":13},{"ruleId":"317","severity":1,"message":"318","line":10,"column":35,"nodeType":"319","endLine":10,"endColumn":52},{"ruleId":"317","severity":1,"message":"318","line":21,"column":37,"nodeType":"319","endLine":21,"endColumn":93},{"ruleId":"313","severity":1,"message":"320","line":6,"column":12,"nodeType":"315","messageId":"316","endLine":6,"endColumn":17},{"ruleId":"321","severity":1,"message":"322","line":33,"column":12,"nodeType":"323","endLine":33,"endColumn":14,"suggestions":"324"},{"ruleId":"321","severity":1,"message":"322","line":32,"column":8,"nodeType":"323","endLine":32,"endColumn":10,"suggestions":"325"},{"ruleId":"321","severity":1,"message":"322","line":40,"column":12,"nodeType":"323","endLine":40,"endColumn":14,"suggestions":"326"},{"ruleId":"321","severity":1,"message":"327","line":33,"column":8,"nodeType":"323","endLine":33,"endColumn":10,"suggestions":"328"},{"ruleId":"313","severity":1,"message":"329","line":20,"column":12,"nodeType":"315","messageId":"316","endLine":20,"endColumn":21},{"ruleId":"313","severity":1,"message":"330","line":23,"column":12,"nodeType":"315","messageId":"316","endLine":23,"endColumn":22},{"ruleId":"313","severity":1,"message":"331","line":27,"column":12,"nodeType":"315","messageId":"316","endLine":27,"endColumn":25},{"ruleId":"313","severity":1,"message":"332","line":30,"column":12,"nodeType":"315","messageId":"316","endLine":30,"endColumn":22},{"ruleId":"313","severity":1,"message":"333","line":85,"column":19,"nodeType":"315","messageId":"316","endLine":85,"endColumn":23},{"ruleId":"313","severity":1,"message":"334","line":5,"column":13,"nodeType":"315","messageId":"316","endLine":5,"endColumn":17},{"ruleId":"313","severity":1,"message":"335","line":12,"column":11,"nodeType":"315","messageId":"316","endLine":12,"endColumn":20},{"ruleId":"321","severity":1,"message":"336","line":38,"column":8,"nodeType":"323","endLine":38,"endColumn":10,"suggestions":"337"},{"ruleId":"309","replacedBy":"338"},{"ruleId":"311","replacedBy":"339"},{"ruleId":"313","severity":1,"message":"334","line":8,"column":13,"nodeType":"315","messageId":"316","endLine":8,"endColumn":17},{"ruleId":"321","severity":1,"message":"327","line":36,"column":8,"nodeType":"323","endLine":36,"endColumn":16,"suggestions":"340"},{"ruleId":"321","severity":1,"message":"322","line":43,"column":8,"nodeType":"323","endLine":43,"endColumn":10,"suggestions":"341"},{"ruleId":"313","severity":1,"message":"342","line":3,"column":28,"nodeType":"315","messageId":"316","endLine":3,"endColumn":40},{"ruleId":"313","severity":1,"message":"333","line":78,"column":19,"nodeType":"315","messageId":"316","endLine":78,"endColumn":23},{"ruleId":"313","severity":1,"message":"335","line":14,"column":9,"nodeType":"315","messageId":"316","endLine":14,"endColumn":18},{"ruleId":"321","severity":1,"message":"343","line":38,"column":6,"nodeType":"323","endLine":38,"endColumn":8,"suggestions":"344"},{"ruleId":"317","severity":1,"message":"318","line":20,"column":33,"nodeType":"319","endLine":20,"endColumn":51},{"ruleId":"321","severity":1,"message":"322","line":34,"column":8,"nodeType":"323","endLine":34,"endColumn":10,"suggestions":"345"},{"ruleId":"321","severity":1,"message":"322","line":33,"column":8,"nodeType":"323","endLine":33,"endColumn":10,"suggestions":"346"},{"ruleId":"321","severity":1,"message":"347","line":31,"column":8,"nodeType":"323","endLine":31,"endColumn":10,"suggestions":"348"},{"ruleId":"313","severity":1,"message":"349","line":11,"column":19,"nodeType":"315","messageId":"316","endLine":11,"endColumn":27},{"ruleId":"313","severity":1,"message":"350","line":1,"column":17,"nodeType":"315","messageId":"316","endLine":1,"endColumn":26},{"ruleId":"313","severity":1,"message":"351","line":4,"column":8,"nodeType":"315","messageId":"316","endLine":4,"endColumn":12},{"ruleId":"317","severity":1,"message":"318","line":30,"column":9,"nodeType":"319","endLine":30,"endColumn":62},{"ruleId":"321","severity":1,"message":"352","line":26,"column":8,"nodeType":"323","endLine":26,"endColumn":10,"suggestions":"353"},{"ruleId":"321","severity":1,"message":"354","line":28,"column":8,"nodeType":"323","endLine":28,"endColumn":10,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":37,"column":61,"nodeType":"319","endLine":37,"endColumn":73},{"ruleId":"313","severity":1,"message":"358","line":4,"column":10,"nodeType":"315","messageId":"316","endLine":4,"endColumn":23},{"ruleId":"313","severity":1,"message":"359","line":5,"column":10,"nodeType":"315","messageId":"316","endLine":5,"endColumn":25},{"ruleId":"360","severity":1,"message":"361","line":57,"column":32,"nodeType":"362","messageId":"363","endLine":57,"endColumn":34},{"ruleId":"360","severity":1,"message":"361","line":60,"column":39,"nodeType":"362","messageId":"363","endLine":60,"endColumn":41},{"ruleId":"321","severity":1,"message":"364","line":76,"column":8,"nodeType":"323","endLine":76,"endColumn":10,"suggestions":"365"},"no-native-reassign",["366"],"no-negated-in-lhs",["367"],"no-unused-vars","'Genre' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'image' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadManhwas'. Either include it or remove the dependency array.","ArrayExpression",["368"],["369"],["370"],"React Hook useEffect has a missing dependency: 'searchManhwas'. Either include it or remove the dependency array.",["371"],"'validName' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'validPassword' is assigned a value but never used.","'validMatch' is assigned a value but never used.","'data' is assigned a value but never used.","'auth' is assigned a value but never used.","'isMounted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'auth.email', 'axiosPrivate', and 'user'. Either include them or remove the dependency array.",["372"],["366"],["367"],["373"],["374"],"'faInfoCircle' is defined but never used.","React Hook useEffect has missing dependencies: 'auth.email' and 'axiosPrivate'. Either include them or remove the dependency array.",["375"],["376"],["377"],"React Hook useEffect has missing dependencies: 'auth?.accessToken' and 'refresh'. Either include them or remove the dependency array.",["378"],"'response' is assigned a value but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["379"],"React Hook useEffect has a missing dependency: 'manhwaID'. Either include it or remove the dependency array.",["380"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'faExclamation' is defined but never used.","'FontAwesomeIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'checkManhwa' and 'userStatus'. Either include them or remove the dependency array.",["381"],"no-global-assign","no-unsafe-negation",{"desc":"382","fix":"383"},{"desc":"382","fix":"384"},{"desc":"382","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"382","fix":"392"},{"desc":"393","fix":"394"},{"desc":"382","fix":"395"},{"desc":"382","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},"Update the dependencies array to be: [loadManhwas]",{"range":"405","text":"406"},{"range":"407","text":"406"},{"range":"408","text":"406"},"Update the dependencies array to be: [searchManhwas]",{"range":"409","text":"410"},"Update the dependencies array to be: [auth.email, axiosPrivate, user]",{"range":"411","text":"412"},"Update the dependencies array to be: [search, searchManhwas]",{"range":"413","text":"414"},{"range":"415","text":"406"},"Update the dependencies array to be: [auth.email, axiosPrivate]",{"range":"416","text":"417"},{"range":"418","text":"406"},{"range":"419","text":"406"},"Update the dependencies array to be: [auth?.accessToken, refresh]",{"range":"420","text":"421"},"Update the dependencies array to be: [url]",{"range":"422","text":"423"},"Update the dependencies array to be: [manhwaID]",{"range":"424","text":"425"},"Update the dependencies array to be: [checkManhwa, userStatus]",{"range":"426","text":"427"},[1072,1074],"[loadManhwas]",[935,937],[1292,1294],[1011,1013],"[searchManhwas]",[958,960],"[auth.email, axiosPrivate, user]",[1117,1125],"[search, searchManhwas]",[1279,1281],[933,935],"[auth.email, axiosPrivate]",[1036,1038],[975,977],[918,920],"[auth?.accessToken, refresh]",[833,835],"[url]",[858,860],"[manhwaID]",[2593,2595],"[checkManhwa, userStatus]"]