[{"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\index.js":"1","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\App.js":"2","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js":"3","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js":"4","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js":"5","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js":"6","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js":"7","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js":"8","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js":"9","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js":"10","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js":"11","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js":"12","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js":"13","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js":"14","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js":"15","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js":"16","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js":"17","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js":"18"},{"size":517,"mtime":1659401724978,"results":"19","hashOfConfig":"20"},{"size":2065,"mtime":1659401724974,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1657325489987,"results":"22","hashOfConfig":"20"},{"size":3201,"mtime":1657588102096,"results":"23","hashOfConfig":"20"},{"size":748,"mtime":1657478659878,"results":"24","hashOfConfig":"20"},{"size":503,"mtime":1659401724977,"results":"25","hashOfConfig":"20"},{"size":1831,"mtime":1659413685007,"results":"26","hashOfConfig":"20"},{"size":938,"mtime":1659413010314,"results":"27","hashOfConfig":"20"},{"size":1501,"mtime":1657484076337,"results":"28","hashOfConfig":"20"},{"size":416,"mtime":1657416592353,"results":"29","hashOfConfig":"20"},{"size":1133,"mtime":1657416860205,"results":"30","hashOfConfig":"20"},{"size":866,"mtime":1657398936313,"results":"31","hashOfConfig":"20"},{"size":376,"mtime":1657406794520,"results":"32","hashOfConfig":"20"},{"size":1627,"mtime":1657480118124,"results":"33","hashOfConfig":"20"},{"size":770,"mtime":1657436758563,"results":"34","hashOfConfig":"20"},{"size":1332,"mtime":1657480144404,"results":"35","hashOfConfig":"20"},{"size":590,"mtime":1657483972340,"results":"36","hashOfConfig":"20"},{"size":2856,"mtime":1657602956887,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"yxb3gv",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\index.js",[],["83","84"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\App.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\reportWebVitals.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\BrowseAllPage.js",["85"],"import React from 'react';\r\nimport ManhwaList from '../components/ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport GetGenre from '../components/GetGenre';\r\nimport Filter from '../components/Filter'\r\nimport Genre from '../components/Genre';\r\nimport useCollapse from 'react-collapsed';\r\n\r\n\r\nfunction BrowseAllPage( {setManhwaToShow, setGenreToShow }) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const history = useHistory(); \r\n    const { getCollapseProps, getToggleProps, isExpanded } = useCollapse()\r\n    \r\n    const loadManhwas = async () => {\r\n        const response = await fetch('/manhwas')\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        history.push(`/manhwa/${manhwa}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas();\r\n    }, [])\r\n\r\n    function getFilter () {\r\n\r\n        let checkboxes = document.querySelectorAll('input[name=\"genre\"]:checked');\r\n        let filter = [];\r\n        checkboxes.forEach((checkbox) => {\r\n            filter.push(checkbox.value);\r\n        })\r\n        const genresFilter =JSON.stringify(filter);\r\n        let text = `You chose to find the following genres: ${genresFilter}`\r\n        if (window.confirm(text) ===true){\r\n            goFilter(genresFilter)\r\n        }\r\n    }\r\n\r\n    function goFilter(genresFilter) {\r\n        history.push(`/results/${genresFilter}` )\r\n    }\r\n    return (\r\n        <body>\r\n            <h2>Explore All</h2>\r\n            <div>\r\n                <div class= \"tooltip\">about advanced filter\r\n                    <span class=\"tooltiptext\">\r\n                        advanced filter allows you to search for manhwa by genres    \r\n                    </span>\r\n                </div>\r\n                <br>\r\n                </br>\r\n                <button {...getToggleProps()}>\r\n                    {isExpanded ? 'See Less': 'Advanced Filter'}\r\n                </button>\r\n\r\n                <section {...getCollapseProps()}> \r\n                <br></br>\r\n                <div class=\"tooltip\">how to use\r\n                            <span class=\"tooltiptext\">\r\n                                select genre(s) that you wish to view and press go. \r\n                                If multiple genres are selected, only manhwas containing\r\n                                all the selected genres are shown.\r\n                            </span>\r\n                        </div>\r\n                <form>\r\n                    <fieldset>\r\n                        <legend>Filter by genre</legend>\r\n\r\n\r\n                        <br></br>\r\n                        <GetGenre setGenreToShow={setGenreToShow} setManhwaToShow={setManhwaToShow} Component={Filter}></GetGenre>\r\n                    </fieldset>\r\n                <button id=\"btn\" type=\"submit\" onClick ={getFilter} \r\n                >Go</button>\r\n\r\n                </form></section>\r\n            </div>\r\n\r\n            \r\n            \r\n            \r\n            <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown}></ManhwaList>\r\n            \r\n        </body>\r\n    );\r\n}\r\n\r\nexport default BrowseAllPage;","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\HomePage.js",["86"],"import React from 'react';\r\nimport Genre from '../components/Genre';\r\nimport FeaturesText from '../components/FeaturesText';\r\nimport GetGenre from '../components/GetGenre';\r\n\r\n\r\nfunction HomePage( {setManhwaToShow, setGenreToShow }) {\r\n    const genreHome = [\"Fantasy\", \"Romance\", \"Action\", \"Drama\"]\r\n    return (\r\n        <>\r\n            <h2>Basic Features</h2>\r\n            <FeaturesText/>\r\n            <h2>By Genre</h2>\r\n            {genreHome.map((genre, i) => <Genre genre={genre}\r\n            setManhwaToShow ={setManhwaToShow}\r\n            key={i} />)}\r\n            {/* <GetGenre setGenreToShow={setGenreToShow} setManhwaToShow={setManhwaToShow} Component={Genre}></GetGenre> */}\r\n\r\n        </>\r\n    );\r\n\r\n    \r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Navigation.js",["87"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Logo from '../Logo1.png';\r\nimport Search from './Search'\r\n\r\nfunction Navigation () {\r\n    return(\r\n        <nav class=\"menu\">\r\n            <Link to = \"/\" exact> <img src={Logo}/> </Link>\r\n            <Link to = \"/\" exact> Home </Link> \r\n            <Link to =\"/browse-all\"> Browse </Link>\r\n            <Link to=\"/information\">info page</Link>\r\n            <Search/>\r\n        </nav>\r\n    );\r\n\r\n};\r\n\r\nexport default Navigation; \r\n","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\ManhwaList.js",["88"],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ManhwaPage.js",["89","90","91"],"import React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\n\r\nexport const ManhwaPage = ( { manhwaToShow } ) => {\r\n    const [title] = useState (manhwaToShow.title);\r\n    const [image] = useState (manhwaToShow.image);\r\n    const [authors] = useState(manhwaToShow.authors);\r\n    const [date] = useState(manhwaToShow.date);\r\n    const [genres] = useState(manhwaToShow.genres);\r\n    const [description] = useState(manhwaToShow.description);\r\n\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <img src= {require( `../manhwaImages/${image}`).default} height={250} width={150} ></img>\r\n            \r\n            <h2>{title}</h2>\r\n            <ul>\r\n                <li>Author(s): {authors}</li>\r\n                <li>Released: {date}</li>\r\n                <li>{genres}</li>\r\n                <li>Summary: {description}</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ManhwaPage; ","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Genre.js",["92","93","94","95"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\nimport  { Col, Container, Row } from 'react-bootstrap';\r\n\r\nfunction Genre( { genre, setManhwaToShow, genreShown}) {\r\n        const [manhwas, setManhwas] = useState([]);\r\n        const history = useHistory(); \r\n    \r\n        const loadManhwas = async () => {\r\n            const params = {\"genres\": `${genre}`};\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify( params ),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/manhwas/genres', options)\r\n            const data = await response.json()\r\n            setManhwas(data);\r\n        };\r\n    \r\n        const manhwaShown = manhwa => {\r\n            setManhwaToShow(manhwa);\r\n            history.push(`/manhwa/${manhwa.title}`);\r\n        }\r\n    \r\n        useEffect(() => {\r\n            loadManhwas()\r\n        }, [])\r\n        \r\n        \r\n    return (\r\n        <>\r\n            \r\n            <h4>{genre}</h4>\r\n\r\n            <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} genreShown={genreShown}></ManhwaList>\r\n\r\n            <Link to= {`/genre/${genre}`} genre={genre}>more from {genre}</Link>\r\n            <hr></hr>\r\n        \r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Genre;\r\n","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\GenrePage.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FilterByGenres.js",["96"],"import React from 'react';\r\nimport ManhwaList from './ManhwaList';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction FilterByGenres( { genre, setManhwaToShow, genreShown}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const history = useHistory(); \r\n\r\n    const loadManhwas = async () => {\r\n        const params = {\"genres\": `${genre}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify( params ),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch('/manhwas/genres', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    };\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        history.push(`/manhwa/${manhwa}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadManhwas()\r\n    }, [])\r\n\r\n    \r\nreturn (\r\n    <>\r\n        \r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} genreShown={genreShown}></ManhwaList>\r\n\r\n    </>\r\n);\r\n}\r\n\r\nexport default FilterByGenres;\r\n","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\GetGenre.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Filter.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\ResultsPage.js",["97"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction ResultsPage({setManhwaToShow}){\r\n    const filter = useParams();\r\n    const genre = JSON.parse(Object.values(filter))\r\n    const genreStr = []\r\n    for (const element of genre){\r\n        genreStr.push(element)\r\n    }\r\n\r\n    const [manhwas, setManhwas] = useState([]);\r\n        const history = useHistory(); \r\n    \r\n        const loadManhwas = async () => {\r\n            const params = {\"genres\": genreStr};\r\n            const options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(params),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            };\r\n            const response = await fetch('/manhwas/filter', options)\r\n            const data = await response.json()\r\n            setManhwas(data);\r\n        };\r\n    \r\n        const manhwaShown = manhwa => {\r\n            setManhwaToShow(manhwa);\r\n            history.push(`/manhwa/${manhwa.title}`);\r\n        }\r\n    \r\n        useEffect(() => {\r\n            loadManhwas()\r\n        }, [])\r\n    \r\n        \r\n    return(\r\n        <>\r\n        <p>Results for {genreStr}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n\r\n\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown}></ManhwaList>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ResultsPage;","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\Search.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\SearchResultsPage.js",["98"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport ManhwaList from '../components/ManhwaList';\r\n\r\nfunction SearchResultsPage ({setManhwaToShow}) {\r\n    const [manhwas, setManhwas] = useState([]);\r\n    const history = useHistory(); \r\n\r\n    const {search} = useParams(); \r\n    const searchManhwas = async () => {\r\n        const params = {\"title\" : `${search}`};\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(params),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n        const response = await fetch ('/search', options)\r\n        const data = await response.json()\r\n        setManhwas(data);\r\n    }\r\n\r\n    const manhwaShown = manhwa => {\r\n        setManhwaToShow(manhwa);\r\n        history.push(`/manhwa/${manhwa}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchManhwas()\r\n    }, [])\r\n\r\n    return(\r\n        \r\n        <>\r\n        <p>Results for {search}</p>\r\n        <i>Not what you wanted?</i>\r\n        <Link to= {`/browse-all`}>Go back to browse all</Link>\r\n        <ManhwaList manhwas={manhwas} manhwaShown = {manhwaShown} ></ManhwaList>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultsPage; ","C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\components\\FeaturesText.js",[],"C:\\Users\\Katie\\Documents\\OSU\\Year 1\\Summer 22'\\CS 361\\ManhwaUp\\manhwa-ui\\src\\pages\\InformationPage.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":9,"column":35,"nodeType":"110","endLine":9,"endColumn":52},{"ruleId":"108","severity":1,"message":"109","line":20,"column":37,"nodeType":"110","endLine":20,"endColumn":93},{"ruleId":"103","severity":1,"message":"111","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":20},{"ruleId":"103","severity":1,"message":"112","line":2,"column":22,"nodeType":"105","messageId":"106","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":17,"column":13,"nodeType":"110","endLine":17,"endColumn":96},{"ruleId":"103","severity":1,"message":"113","line":6,"column":11,"nodeType":"105","messageId":"106","endLine":6,"endColumn":14},{"ruleId":"103","severity":1,"message":"114","line":6,"column":16,"nodeType":"105","messageId":"106","endLine":6,"endColumn":25},{"ruleId":"103","severity":1,"message":"115","line":6,"column":27,"nodeType":"105","messageId":"106","endLine":6,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":33,"column":12,"nodeType":"118","endLine":33,"endColumn":14,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"117","line":32,"column":8,"nodeType":"118","endLine":32,"endColumn":10,"suggestions":"120"},{"ruleId":"116","severity":1,"message":"117","line":40,"column":12,"nodeType":"118","endLine":40,"endColumn":14,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"122","line":33,"column":8,"nodeType":"118","endLine":33,"endColumn":10,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Genre' is defined but never used.","Identifier","unusedVar","'GetGenre' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'Link' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadManhwas'. Either include it or remove the dependency array.","ArrayExpression",["126"],["127"],["128"],"React Hook useEffect has a missing dependency: 'searchManhwas'. Either include it or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},{"desc":"130","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [loadManhwas]",{"range":"136","text":"137"},{"range":"138","text":"137"},{"range":"139","text":"137"},"Update the dependencies array to be: [searchManhwas]",{"range":"140","text":"141"},[1127,1129],"[loadManhwas]",[935,937],[1292,1294],[1011,1013],"[searchManhwas]"]